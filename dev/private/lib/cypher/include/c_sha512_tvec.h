/*******************************************************************************
**
**	V300b Updated Board Support Package
**	$Id: v300b_crypto.cpp 20311 2013-07-25 13:58:06Z spcorcoran $
**
**	COPYRIGHT INFORMATION:	
**		This software is proprietary and confidential.  
**		By using this software you agree to the terms and conditions of the 
**		associated Lumidigm Inc. License Agreement.
**
**		(c) Copyright 2014 Lumidigm, Inc. (Unpublished Copyright) ALL RIGHTS RESERVED.
**
*******************************************************************************/
#pragma once

#include "CypherTypes.h"
#include "c_sha512.h"

#if 0

SECTION_SDRAM0_BANK1	// NOT SPEED CRITICAL
static u8 sha4_padding[128] =
{
 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*
 * Round constants
 */
SECTION_SDRAM0_BANK1	// NOT SPEED CRITICAL
static uint64_t K[80] =
{
    UL64(0x428A2F98D728AE22),  UL64(0x7137449123EF65CD),
    UL64(0xB5C0FBCFEC4D3B2F),  UL64(0xE9B5DBA58189DBBC),
    UL64(0x3956C25BF348B538),  UL64(0x59F111F1B605D019),
    UL64(0x923F82A4AF194F9B),  UL64(0xAB1C5ED5DA6D8118),
    UL64(0xD807AA98A3030242),  UL64(0x12835B0145706FBE),
    UL64(0x243185BE4EE4B28C),  UL64(0x550C7DC3D5FFB4E2),
    UL64(0x72BE5D74F27B896F),  UL64(0x80DEB1FE3B1696B1),
    UL64(0x9BDC06A725C71235),  UL64(0xC19BF174CF692694),
    UL64(0xE49B69C19EF14AD2),  UL64(0xEFBE4786384F25E3),
    UL64(0x0FC19DC68B8CD5B5),  UL64(0x240CA1CC77AC9C65),
    UL64(0x2DE92C6F592B0275),  UL64(0x4A7484AA6EA6E483),
    UL64(0x5CB0A9DCBD41FBD4),  UL64(0x76F988DA831153B5),
    UL64(0x983E5152EE66DFAB),  UL64(0xA831C66D2DB43210),
    UL64(0xB00327C898FB213F),  UL64(0xBF597FC7BEEF0EE4),
    UL64(0xC6E00BF33DA88FC2),  UL64(0xD5A79147930AA725),
    UL64(0x06CA6351E003826F),  UL64(0x142929670A0E6E70),
    UL64(0x27B70A8546D22FFC),  UL64(0x2E1B21385C26C926),
    UL64(0x4D2C6DFC5AC42AED),  UL64(0x53380D139D95B3DF),
    UL64(0x650A73548BAF63DE),  UL64(0x766A0ABB3C77B2A8),
    UL64(0x81C2C92E47EDAEE6),  UL64(0x92722C851482353B),
    UL64(0xA2BFE8A14CF10364),  UL64(0xA81A664BBC423001),
    UL64(0xC24B8B70D0F89791),  UL64(0xC76C51A30654BE30),
    UL64(0xD192E819D6EF5218),  UL64(0xD69906245565A910),
    UL64(0xF40E35855771202A),  UL64(0x106AA07032BBD1B8),
    UL64(0x19A4C116B8D2D0C8),  UL64(0x1E376C085141AB53),
    UL64(0x2748774CDF8EEB99),  UL64(0x34B0BCB5E19B48A8),
    UL64(0x391C0CB3C5C95A63),  UL64(0x4ED8AA4AE3418ACB),
    UL64(0x5B9CCA4F7763E373),  UL64(0x682E6FF3D6B2B8A3),
    UL64(0x748F82EE5DEFB2FC),  UL64(0x78A5636F43172F60),
    UL64(0x84C87814A1F0AB72),  UL64(0x8CC702081A6439EC),
    UL64(0x90BEFFFA23631E28),  UL64(0xA4506CEBDE82BDE9),
    UL64(0xBEF9A3F7B2C67915),  UL64(0xC67178F2E372532B),
    UL64(0xCA273ECEEA26619C),  UL64(0xD186B8C721C0C207),
    UL64(0xEADA7DD6CDE0EB1E),  UL64(0xF57D4F7FEE6ED178),
    UL64(0x06F067AA72176FBA),  UL64(0x0A637DC5A2C898A6),
    UL64(0x113F9804BEF90DAE),  UL64(0x1B710B35131C471B),
    UL64(0x28DB77F523047D84),  UL64(0x32CAAB7B40C72493),
    UL64(0x3C9EBE0A15C9BEBC),  UL64(0x431D67C49C100D4C),
    UL64(0x4CC5D4BECB3E42B6),  UL64(0x597F299CFC657E2A),
    UL64(0x5FCB6FAB3AD6FAEC),  UL64(0x6C44198C4A475817)
};

#endif

// 512b Test
SECTION_SDRAM0_BANK1
static u8 KAT1_MSG[] = { 
	0x16, 0x2b, 0x0c, 0xf9, 0xb3, 0x75, 0x0f, 0x94, 0x38 };
	
SECTION_SDRAM0_BANK1
static u8 KAT1_MAC[] = { 
	0xad, 0xe2, 0x17, 0x30, 0x5d, 0xc3, 0x43, 0x92, 0xaa, 0x4b, 0x8e, 0x57, 0xf6, 0x4f, 0x5a, 0x3a,
	0xfd, 0xd2, 0x7f, 0x1f, 0xa9, 0x69, 0xa9, 0xa2, 0x60, 0x83, 0x53, 0xf8, 0x2b, 0x95, 0xcf, 0xb4, 
	0xae, 0x84, 0x59, 0x8d, 0x01, 0x57, 0x5a, 0x57, 0x8a, 0x10, 0x68, 0xa5, 0x9b, 0x34, 0xb5, 0x04, 
	0x5f, 0xf6, 0xd5, 0x29, 0x9c, 0x5c, 0xb7, 0xee, 0x17, 0x18, 0x07, 0x01, 0xb2, 0xd1, 0xd6, 0x95 };

// 384b Test
SECTION_SDRAM0_BANK1
static u8 KAT2_MSG[] = {
	0x4d, 0x43, 0x70, 0x2b, 0xe4, 0xf0, 0x53, 0x03, 0x19, 0x55, 0x5d, 0x7f, 0x1a, 0x33};

SECTION_SDRAM0_BANK1
static u8 KAT2_MAC[] = { 
	0x83, 0xc8, 0xf0, 0xbb, 0x76, 0x28, 0x01, 0xeb, 0x26, 0xcc, 0x51, 0x15, 0xab, 0xeb, 0xb6, 0x57, 
	0xc1, 0x8f, 0xf8, 0x11, 0xde, 0x50, 0x0b, 0x32, 0xb7, 0xa5, 0x68, 0xa2, 0x20, 0xa2, 0x87, 0xe9,
	0x00, 0xb6, 0xc7, 0x52, 0x24, 0xfe, 0x74, 0x29, 0x16, 0x9f, 0xbd, 0x53, 0x4c, 0xb5, 0x88, 0xe1 };

// HMAC-SHA-512 Test
SECTION_SDRAM0_BANK1
static u8 KAT3_MSG[] = {0x48, 0x69, 0x20, 0x54, 0x68, 0x65, 0x72, 0x65 };  // Hi,There!
SECTION_SDRAM0_BANK1
static u8 KAT3_KEY[] = {	0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b,	0x0b, 0x0b, 
							0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b   };    
SECTION_SDRAM0_BANK1
static u8 KAT3_MAC [] = {
	0x87, 0xaa, 0x7c, 0xde, 0xa5, 0xef, 0x61, 0x9d, 0x4f, 0xf0, 0xb4, 0x24, 0x1a, 0x1d, 0x6c, 0xb0,
	0x23, 0x79, 0xf4, 0xe2, 0xce, 0x4e, 0xc2, 0x78, 0x7a, 0xd0, 0xb3, 0x05, 0x45, 0xe1, 0x7c, 0xde,
	0xda, 0xa8, 0x33, 0xb7, 0xd6, 0xb8, 0xa7, 0x02, 0x03, 0x8b, 0x27, 0x4e, 0xae, 0xa3, 0xf4, 0xe4,
	0xbe, 0x9d, 0x91, 0x4e, 0xeb, 0x61, 0xf1, 0x70, 0x2e, 0x69, 0x6c, 0x20, 0x3a, 0x12, 0x68, 0x54	};	
